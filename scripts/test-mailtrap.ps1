# Script PowerShell pour tester la configuration Mailtrap
# Envoie un email de test via AlertManager vers Mailtrap

param(
    [string]$TestEmail = "oussamabartil.04@gmail.com"
)

Write-Host "üß™ Test de la configuration Mailtrap" -ForegroundColor Green
Write-Host "=====================================" -ForegroundColor Cyan

# V√©rifier que Docker est en cours d'ex√©cution
try {
    $dockerStatus = docker ps --format "table {{.Names}}\t{{.Status}}" | Select-String "alertmanager"
    if ($dockerStatus) {
        Write-Host "‚úÖ AlertManager est en cours d'ex√©cution" -ForegroundColor Green
    } else {
        Write-Host "‚ùå AlertManager n'est pas en cours d'ex√©cution" -ForegroundColor Red
        Write-Host "D√©marrez les services avec: docker-compose up -d" -ForegroundColor Yellow
        exit 1
    }
} catch {
    Write-Host "‚ùå Docker n'est pas accessible" -ForegroundColor Red
    exit 1
}

# Fonction pour envoyer une alerte de test
function Send-TestAlert {
    param([string]$Email)
    
    Write-Host "üìß Envoi d'une alerte de test vers $Email..." -ForegroundColor Yellow
    
    # Cr√©er une alerte de test via l'API AlertManager
    $alertData = @{
        alerts = @(
            @{
                labels = @{
                    alertname = "MailtrapTest"
                    severity = "warning"
                    alert_type = "cpu_high"
                    instance = "localhost:9182"
                }
                annotations = @{
                    summary = "Test d'alerte Mailtrap - CPU √©lev√© simul√©"
                    description = "Ceci est un test pour v√©rifier que les emails sont bien envoy√©s vers Mailtrap"
                }
                startsAt = (Get-Date).ToUniversalTime().ToString("yyyy-MM-ddTHH:mm:ss.fffZ")
            }
        )
    } | ConvertTo-Json -Depth 10
    
    try {
        $response = Invoke-RestMethod -Uri "http://localhost:9093/api/v1/alerts" -Method Post -Body $alertData -ContentType "application/json"
        Write-Host "‚úÖ Alerte de test envoy√©e avec succ√®s" -ForegroundColor Green
        return $true
    } catch {
        Write-Host "‚ùå Erreur lors de l'envoi de l'alerte: $($_.Exception.Message)" -ForegroundColor Red
        return $false
    }
}

# V√©rifier la configuration AlertManager
Write-Host "`nüîç V√©rification de la configuration AlertManager..." -ForegroundColor Yellow

$configPath = "alertmanager\alertmanager.yml"
if (Test-Path $configPath) {
    $config = Get-Content $configPath -Raw
    
    if ($config -match "sandbox.smtp.mailtrap.io") {
        Write-Host "‚úÖ Configuration Mailtrap d√©tect√©e" -ForegroundColor Green
    } else {
        Write-Host "‚ùå Configuration Mailtrap non trouv√©e" -ForegroundColor Red
        Write-Host "Ex√©cutez d'abord: .\scripts\configure-mailtrap.ps1" -ForegroundColor Yellow
        exit 1
    }
    
    if ($config -match $TestEmail) {
        Write-Host "‚úÖ Email de test configur√©: $TestEmail" -ForegroundColor Green
    } else {
        Write-Host "‚ö†Ô∏è  Email de test non trouv√© dans la configuration" -ForegroundColor Yellow
    }
} else {
    Write-Host "‚ùå Fichier de configuration AlertManager non trouv√©" -ForegroundColor Red
    exit 1
}

# Envoyer l'alerte de test
Write-Host "`nüöÄ Envoi de l'alerte de test..." -ForegroundColor Yellow
if (Send-TestAlert -Email $TestEmail) {
    Write-Host "`n‚úÖ Test termin√© avec succ√®s!" -ForegroundColor Green
    Write-Host "`nüìã Prochaines √©tapes:" -ForegroundColor Cyan
    Write-Host "1. Connectez-vous √† votre compte Mailtrap" -ForegroundColor White
    Write-Host "2. V√©rifiez votre inbox pour l'email d'alerte" -ForegroundColor White
    Write-Host "3. L'email devrait arriver dans les 30 secondes" -ForegroundColor White
    
    Write-Host "`nüåê Liens utiles:" -ForegroundColor Yellow
    Write-Host "- Mailtrap: https://mailtrap.io/inboxes" -ForegroundColor White
    Write-Host "- AlertManager: http://localhost:9093" -ForegroundColor White
    Write-Host "- Prometheus: http://localhost:9090" -ForegroundColor White
} else {
    Write-Host "`n‚ùå √âchec du test" -ForegroundColor Red
    Write-Host "V√©rifiez les logs d'AlertManager: docker-compose logs alertmanager" -ForegroundColor Yellow
}

Write-Host "`nüìä Pour surveiller les alertes en temps r√©el:" -ForegroundColor Yellow
Write-Host "docker-compose logs -f alertmanager" -ForegroundColor White
