# Script PowerShell pour d√©marrer la stack de monitoring
# Supervision des Syst√®mes avec Prometheus & Grafana

Write-Host "üöÄ D√©marrage de la stack de monitoring Prometheus & Grafana" -ForegroundColor Green
Write-Host "=================================================" -ForegroundColor Cyan

# V√©rification de Docker
Write-Host "üîç V√©rification de Docker..." -ForegroundColor Yellow
try {
    $dockerVersion = docker --version
    Write-Host "‚úÖ Docker d√©tect√©: $dockerVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Docker n'est pas install√© ou n'est pas d√©marr√©" -ForegroundColor Red
    Write-Host "Veuillez installer Docker Desktop et le d√©marrer avant de continuer." -ForegroundColor Red
    exit 1
}

# V√©rification de Docker Compose
Write-Host "üîç V√©rification de Docker Compose..." -ForegroundColor Yellow
try {
    $composeVersion = docker-compose --version
    Write-Host "‚úÖ Docker Compose d√©tect√©: $composeVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Docker Compose n'est pas disponible" -ForegroundColor Red
    exit 1
}

# Cr√©ation des r√©pertoires n√©cessaires
Write-Host "üìÅ Cr√©ation des r√©pertoires..." -ForegroundColor Yellow
$directories = @(
    "prometheus/rules",
    "grafana/provisioning/datasources",
    "grafana/provisioning/dashboards", 
    "grafana/dashboards/system",
    "grafana/dashboards/docker",
    "grafana/dashboards/applications",
    "alertmanager"
)

foreach ($dir in $directories) {
    if (!(Test-Path $dir)) {
        New-Item -ItemType Directory -Path $dir -Force | Out-Null
        Write-Host "‚úÖ R√©pertoire cr√©√©: $dir" -ForegroundColor Green
    }
}

# Arr√™t des conteneurs existants (si ils existent)
Write-Host "üõë Arr√™t des conteneurs existants..." -ForegroundColor Yellow
docker-compose down 2>$null

# Suppression des volumes orphelins
Write-Host "üßπ Nettoyage des volumes orphelins..." -ForegroundColor Yellow
docker volume prune -f 2>$null

# D√©marrage de la stack
Write-Host "üöÄ D√©marrage de la stack de monitoring..." -ForegroundColor Yellow
docker-compose up -d

# Attente que les services soient pr√™ts
Write-Host "‚è≥ Attente du d√©marrage des services..." -ForegroundColor Yellow
Start-Sleep -Seconds 30

# V√©rification de l'√©tat des services
Write-Host "üîç V√©rification de l'√©tat des services..." -ForegroundColor Yellow
$services = @(
    @{Name="Prometheus"; Port=9090; URL="http://localhost:9090"},
    @{Name="Grafana"; Port=3000; URL="http://localhost:3000"},
    @{Name="AlertManager"; Port=9093; URL="http://localhost:9093"},
    @{Name="Node Exporter"; Port=9100; URL="http://localhost:9100"},
    @{Name="cAdvisor"; Port=8080; URL="http://localhost:8080"},
    @{Name="Windows Exporter"; Port=9182; URL="http://localhost:9182"}
)

foreach ($service in $services) {
    try {
        $response = Invoke-WebRequest -Uri "$($service.URL)/metrics" -TimeoutSec 5 -UseBasicParsing 2>$null
        if ($response.StatusCode -eq 200) {
            Write-Host "‚úÖ $($service.Name) est op√©rationnel sur le port $($service.Port)" -ForegroundColor Green
        }
    } catch {
        Write-Host "‚ö†Ô∏è  $($service.Name) n'est pas encore pr√™t sur le port $($service.Port)" -ForegroundColor Yellow
    }
}

Write-Host "`nüéâ Stack de monitoring d√©marr√©e avec succ√®s!" -ForegroundColor Green
Write-Host "=================================================" -ForegroundColor Cyan
Write-Host "üìä Acc√®s aux interfaces:" -ForegroundColor White
Write-Host "   ‚Ä¢ Grafana:      http://localhost:3000 (admin/admin123)" -ForegroundColor Cyan
Write-Host "   ‚Ä¢ Prometheus:   http://localhost:9090" -ForegroundColor Cyan
Write-Host "   ‚Ä¢ AlertManager: http://localhost:9093" -ForegroundColor Cyan
Write-Host "   ‚Ä¢ cAdvisor:     http://localhost:8080" -ForegroundColor Cyan
Write-Host "`nüí° Conseils:" -ForegroundColor White
Write-Host "   ‚Ä¢ Changez le mot de passe Grafana par d√©faut" -ForegroundColor Yellow
Write-Host "   ‚Ä¢ Configurez les notifications d'alertes" -ForegroundColor Yellow
Write-Host "   ‚Ä¢ Personnalisez les dashboards selon vos besoins" -ForegroundColor Yellow
Write-Host "`nüîß Pour arr√™ter: docker-compose down" -ForegroundColor White
